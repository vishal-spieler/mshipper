@model SMEPanel.Models.Universal

@{
    ViewBag.Title = "Account";
    Layout = "~/Views/Shared/Master.cshtml";
}

<h2>Account</h2>
<body>
    <div class="page-content page-thin">
        <div class="row">

            <div class="col-md-8 col-sm-offset-2">
                <div class="panel panel-default no-bd">
                    <div class="panel-header bg-dark">
                        <h2 class="panel-title"><strong>Change password</strong> </h2>
                    </div>
                    <div class="panel-body bg-white">
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <div id="containerBlock">
                                    <form action="@Url.Action("Account", "DashBoard")" @*class="form-validation"*@ enctype="multipart/form-data" name="Addsme" method="post">
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <span class="input input--hoshi">
                                                    <input class="input__field input__field--hoshi" type="password" name="oldpass" id="oldpass" @*onblur="validatePhone(),validatespace()"*@ required />
                                                    <label class="input__label input__label--hoshi input__label--hoshi-color-1" for="input-4">
                                                        <span class="input__label-content input__label-content--hoshi">Enter Old Password</span>
                                                    </label>
                                                </span>
                                                <div id="Mobile-error" style="color:red"></div>
                                            </div>
                                            <div class="col-sm-4" id="passdiv">
                                                <span class="input input--hoshi">
                                                    <input class="input__field input__field--hoshi" type="password" name="pass" id="pass" @*onblur="validatePhone(),validatespace()"*@ required />
                                                    <label class="input__label input__label--hoshi input__label--hoshi-color-1" for="input-4">
                                                        <span class="input__label-content input__label-content--hoshi">Enter New Password</span>
                                                    </label>
                                                </span>
                                                <div id="Mobile-error" style="color:red"></div>
                                            </div>
                                            <div class="col-sm-4">
                                                <span class="input input--hoshi" id="cpassdiv">
                                                    <input class="input__field input__field--hoshi" type="password" name="cpass" id="cpass" @*onblur="validatePhone(),validatespace()"*@ required />
                                                    <label class="input__label input__label--hoshi input__label--hoshi-color-1" for="input-4">
                                                        <span class="input__label-content input__label-content--hoshi">Enter Confirm Password</span>
                                                    </label>
                                                </span>
                                                <div id="Mobile-error" style="color:red"></div>
                                                <input type="hidden" name="hiddenoldpass" id="hiddenoldpass" value="@ViewBag.pass" />
                                                <input type="hidden" id="msg" name="msg" value="@ViewBag.msg" />
                                                @*<script type="text/javascript">
                            $(document).ready(function () {
                             var msg=$("#msg").val();
                             if (msg == "Your Password Is Updated")
                            {
                                 alert("Your Password Is Updated");

                            }
                         });

                        </script>*@
                                            </div>
                                            <div class="text-center  m-t-20">
                                                <input type="button" name="account" id="account" value="Submit" class="btn btn-embossed btn-primary" />
                                                <button type="reset" class="cancel btn btn-embossed btn-default m-b-10 m-r-0">Cancel</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">

        </div>
        <div class="footer">
            <div class="copyright">
                <p class="pull-left sm-pull-reset">
                    <span>Copyright <span class="copyright">©</span> 2015 </span>
                    <span>mShipper</span>.
                    <span>All rights reserved. </span>
                </p>
                <p class="pull-right sm-pull-reset">
                    <span><a href="#" class="m-r-10">Support</a> | <a href="#" class="m-l-10 m-r-10">Terms of use</a> | <a href="#" class="m-l-10">Privacy Policy</a></span>
                </p>
            </div>
        </div>
    </div>
   
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    
    <link href="~/assets/sweetalert.css" rel="stylesheet" />
    <script src="~/assets/sweetalert.min.js"></script>
    <link href="~/assets/waitMe.css" rel="stylesheet" />
    <script type="text/javascript">
            $(document).ready(function () {
              $('#account').click(function () {
                 var oldpass = $('#oldpass').val();
                 var hiddenoldpass = $("#hiddenoldpass").val();
                 var newpass = $("#pass").val();
                 var cpass = $("#cpass").val();
                 var current_effect = "roundBounce";
                 if ($('#oldpass').val() == "" || $("#pass").val() == "" || $("#cpass").val() == "")
                 {
                    
                     swal("Please enter all field !");
                     return false;
                 }
                 else if (oldpass == hiddenoldpass)
                 {
                     if (newpass == cpass) {
                         run_waitMe(current_effect);
                         $.ajax({
                             url: '/dashboard/Account',
                             data: { 'pass': newpass },
                             type: "post",
                             cache: false,
                             success: function () {
                                 $('#containerBlock > form').waitMe('hide');
                                 swal("Your password is updated!");
                                 //alert("Your Password Is Updated");
                                 $("#pass").val('');
                                 $("#cpass").val('');
                                 $('#oldpass').val('');
                             },
                             error: function () {
                                
                             }
                         });
                     }
                     else
                     {
                         swal("New password and confirm password does not match!");
                        // alert("Password Doesn't Match");
                     }
                 }
                 else
                 {
                     swal("Old password does not  match!");
                    //alert("Enter Correct Password");
                 }
              });

              function run_waitMe(effect) {
                  $('#containerBlock > form').waitMe({
                      effect: effect,
                      text: 'Please wait...',
                      bg: 'rgba(255,255,255,0.7)',
                      color: '#000',
                      sizeW: '',
                      sizeH: '',
                      source: '/assets/img.svg'
                  });
              }


              (function ($) {
                  $.fn.waitMe = function (method) {
                      return this.each(function () {

                          var elem = $(this),
                                elemClass = 'waitMe',
                                waitMe_text,
                                effectObj,
                                effectElemCount,
                                createSubElem = false,
                                specificAttr = 'background-color',
                                addStyle = '',
                                effectElemHTML = '',
                                waitMeObj,
                                containerSize,
                                elemSize,
                                _options,
                                currentID;

                          var methods = {
                              init: function () {
                                  var _defaults = {
                                      effect: 'bounce',
                                      text: '',
                                      bg: 'rgba(255,255,255,0.7)',
                                      color: '#000',
                                      sizeW: '',
                                      sizeH: '',
                                      source: '',
                                      onClose: function () { }
                                  };
                                  _options = $.extend(_defaults, method);

                                  currentID = new Date().getMilliseconds();
                                  waitMeObj = $('<div class="' + elemClass + '" data-waitme_id="' + currentID + '"></div>');
                                  var size = 'width:' + _options.sizeW + ';height:' + _options.sizeH;

                                  switch (_options.effect) {
                                      case 'none':
                                          effectElemCount = 0;
                                          break;
                                      case 'bounce':
                                          effectElemCount = 3;
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'rotateplane':
                                          effectElemCount = 1;
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'stretch':
                                          effectElemCount = 5;
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'orbit':
                                          effectElemCount = 2;
                                          containerSize = size;
                                          elemSize = '';
                                          break;
                                      case 'roundBounce':
                                          effectElemCount = 12;
                                          containerSize = size;
                                          elemSize = '';
                                          break;
                                      case 'win8':
                                          effectElemCount = 5;
                                          createSubElem = true;
                                          containerSize = size;
                                          elemSize = size;
                                          break;
                                      case 'win8_linear':
                                          effectElemCount = 5;
                                          createSubElem = true;
                                          containerSize = size;
                                          elemSize = '';
                                          break;
                                      case 'ios':
                                          effectElemCount = 12;
                                          containerSize = size;
                                          elemSize = '';
                                          break;
                                      case 'facebook':
                                          effectElemCount = 3;
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'rotation':
                                          effectElemCount = 1;
                                          specificAttr = 'border-color';
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'timer':
                                          effectElemCount = 2;
                                          if ($.isArray(_options.color)) {
                                              var color = _options.color[0];
                                          } else {
                                              var color = _options.color;
                                          }
                                          addStyle = 'border-color:' + color;
                                          containerSize = size;
                                          elemSize = '';
                                          break;
                                      case 'pulse':
                                          effectElemCount = 1;
                                          specificAttr = 'border-color';
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'progressBar':
                                          effectElemCount = 1;
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'bouncePulse':
                                          effectElemCount = 3;
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                      case 'img':
                                          effectElemCount = 1;
                                          containerSize = '';
                                          elemSize = size;
                                          break;
                                  }

                                  if (_options.sizeW === '' && _options.sizeH === '') {
                                      elemSize = '';
                                      containerSize = '';
                                  }
                                  if (containerSize !== '' && addStyle !== '') {
                                      addStyle = ';' + addStyle;
                                  }

                                  if (effectElemCount > 0) {
                                      effectObj = $('<div class="' + elemClass + '_progress ' + _options.effect + '"></div>');
                                      if (_options.effect == 'img') {
                                          effectElemHTML = '<img src="' + _options.source + '" style="' + elemSize + '">';
                                      } else {
                                          for (var i = 1; i <= effectElemCount; ++i) {
                                              if ($.isArray(_options.color)) {
                                                  var color = _options.color[i];
                                                  if (color == undefined) {
                                                      color = '#000';
                                                  }
                                              } else {
                                                  var color = _options.color;
                                              }
                                              if (createSubElem) {
                                                  effectElemHTML += '<div class="' + elemClass + '_progress_elem' + i + '" style="' + elemSize + '"><div style="' + specificAttr + ':' + color + '"></div></div>';
                                              } else {
                                                  effectElemHTML += '<div class="' + elemClass + '_progress_elem' + i + '" style="' + specificAttr + ':' + color + ';' + elemSize + '"></div>';
                                              }
                                          }
                                      }
                                      effectObj = $('<div class="' + elemClass + '_progress ' + _options.effect + '" style="' + containerSize + addStyle + '">' + effectElemHTML + '</div>');
                                  }

                                  if (_options.text) {
                                      if ($.isArray(_options.color)) {
                                          var color = _options.color[0];
                                      } else {
                                          var color = _options.color;
                                      }
                                      waitMe_text = $('<div class="' + elemClass + '_text" style="color:' + color + '">' + _options.text + '</div>');
                                  }
                                  var elemObj = elem.find('> .' + elemClass);

                                  if (elemObj) {
                                      elemObj.remove();
                                  }
                                  var waitMeDivObj = $('<div class="' + elemClass + '_content"></div>');
                                  waitMeDivObj.append(effectObj, waitMe_text);
                                  waitMeObj.append(waitMeDivObj);
                                  if (elem[0].tagName == 'HTML') {
                                      elem = $('body');
                                  }
                                  elem.addClass(elemClass + '_container').attr('data-waitme_id', currentID).append(waitMeObj);
                                  elemObj = elem.find('> .' + elemClass);
                                  var elemContentObj = elem.find('.' + elemClass + '_content');
                                  elemObj.css({ background: _options.bg });
                                  elemContentObj.css({ marginTop: -elemContentObj.outerHeight() / 2 + 'px' });

                                  function setElTop(getTop) {
                                      elemContentObj.css({ top: 'auto', transform: 'translateY(' + getTop + 'px) translateZ(0)' });
                                  }
                                  if (elem.outerHeight() > $(window).height()) {
                                      var sTop = $(window).scrollTop(),
                                      elH = elemContentObj.outerHeight(),
                                      elTop = elem.offset().top,
                                      cH = elem.outerHeight(),
                                                  getTop = sTop - elTop + $(window).height() / 2;
                                      if (getTop < 0) {
                                          getTop = Math.abs(getTop);
                                      }
                                      if (getTop - elH >= 0 && getTop + elH <= cH) {
                                          if (elTop - sTop > $(window).height() / 2) {
                                              getTop = elH;
                                          }
                                          setElTop(getTop);
                                      } else {
                                          if (sTop > elTop + cH - elH) {
                                              getTop = sTop - elTop - elH;
                                          } else {
                                              getTop = sTop - elTop + elH;
                                          }
                                          setElTop(getTop);
                                      }
                                      $(document).scroll(function () {
                                          var sTop = $(window).scrollTop(),
                                          getTop = sTop - elTop + $(window).height() / 2;
                                          if (getTop - elH >= 0 && getTop + elH <= cH) {
                                              setElTop(getTop);
                                          }
                                      });
                                  }

                                  elemObj.on('destroyed', function () {
                                      if (_options.onClose && $.isFunction(_options.onClose)) {
                                          _options.onClose();
                                      }
                                      elemObj.trigger('close');
                                  });

                                  $.event.special.destroyed = {
                                      remove: function (o) {
                                          if (o.handler) {
                                              o.handler();
                                          }
                                      }
                                  };

                                  return elemObj;
                              },
                              hide: function () {
                                  waitMeClose();
                              }
                          };

                          function waitMeClose() {
                              var currentID = elem.attr('data-waitme_id');
                              elem.removeClass(elemClass + '_container').removeAttr('data-waitme_id');
                              elem.find('.' + elemClass + '[data-waitme_id="' + currentID + '"]').remove();
                          }

                          if (methods[method]) {
                              return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
                          } else if (typeof method === 'object' || !method) {
                              return methods.init.apply(this, arguments);
                          }

                      });

                  };
                  $(window).load(function () {
                      $('body.waitMe_body').addClass('hideMe');
                      setTimeout(function () {
                          $('body.waitMe_body').find('.waitMe_container:not([data-waitme_id])').remove();
                          $('body.waitMe_body').removeClass('waitMe_body hideMe');
                      }, 200);
                  });
              })(jQuery);

           });
    </script>
</body>
